
@using EventPlus.Models
@model EventViewModel

@{
    ViewBag.Title = Model.Name;
}

    <section class="signup-section background-grey" id="login">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-12 text-center bg-white px-lg-5">
                    <h2 class="text-black-50 mt-5">Event Detail</h2>
                    <hr class="divider my-4" />
                    <div class="px-lg-5">

                        @if (Model != null)
                        {

                            if (Session["UserType"] == "Admin" || Session["OrganizationID"]?.ToString() == Model.OrganizationID.ToString())
                            {
                                using (Html.BeginForm("EventDetail", "Event", FormMethod.Post))
                                {

                                    @Html.HiddenFor(model => model.ID)

                                    if (Session["UserType"] == "Admin")
                                    {
                                        <p class="text-left">Organization</p>
                                        @Html.DropDownListFor(model => model.OrganizationID, ViewBag.OrganizationList as SelectList, "--Select Organization--", new { @class = "form-control form-group name-input", @placeholder = "Organization" })
                                        @Html.ValidationMessageFor(model => model.OrganizationID, "", new { @class = "error", })
                                        <br />
                                    }


                                    <p class="text-left">Name</p>
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control form-group name-input", @placeholder = "Name" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "error", })
                                    <br />

                                    <p class="text-left">Type</p>
                                    @Html.TextBoxFor(model => model.Type, new { @class = "form-control form-group name-input", @placeholder = "Type" })
                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "error", })
                                    <br />

                                    <p class="text-left">Location</p>
                                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control form-group name-input", @placeholder = "Location" })
                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "error", })
                                    <br />

                                    <p class="text-left">Link</p>
                                    @Html.TextBoxFor(model => model.Link, new { @class = "form-control form-group name-input", @placeholder = "Link" })
                                    @Html.ValidationMessageFor(model => model.Link, "", new { @class = "error", })
                                    <br />

                                    <p class="text-left">Description</p>
                                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control form-group name-input", @placeholder = "Description" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "error", })
                                    <br />

                                    <p class="text-left">Scheduled Date & Time</p>
                                    @Html.TextBoxFor(model => model.ScheduledDateTime, new { @class = "form-control form-group name-input", @placeholder = "Date & Time", @type = "datetime-local", @value = Model.ScheduledDateTime })
                                    @Html.ValidationMessageFor(model => model.ScheduledDateTime, "", new { @class = "error", })

                                    <br />

                                    <p class="text-left">Event Is Recurring</p>
                                    @Html.DropDownListFor(model => model.IsRecurring, new SelectList(Enum.GetValues(typeof(IsRecurring))), "--Event Is Recurring--", new { @class = "form-control form-group name-input" });

                                    <br />
                                    <p class="text-left">No. of Tickets Available</p>
                                    @Html.TextBoxFor(model => model.TicketQuantity, new { @class = "form-control form-group name-input", @placeholder = "No. of Tickets Available", @type = "number" })
                                    @Html.ValidationMessageFor(model => model.TicketQuantity, "", new { @class = "error", })

                                    <br />
                                    <p class="text-left">Ticket Price</p>
                                    @Html.TextBoxFor(model => model.TicketPrice, new { @class = "form-control form-group name-input", @placeholder = "Ticket Price", @type = "number" })
                                    @Html.ValidationMessageFor(model => model.TicketPrice, "", new { @class = "error", })

                                    <br />
                                    <input type="submit" value="Update" class="btn btn-block btn-primary form-group login-button" />

                                }


                                @Html.ActionLink("Delete", "DeleteEvent", new { eventID = Model.ID }, new { @class = "btn btn-block btn-danger form-group login-button" })

                                <br />
                            }
                            else
                            {
                                <table class="table table-striped">

                                    <tr>
                                        <td>
                                            Name
                                        </td>
                                        <td>
                                            @Model.Name
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Type
                                        </td>
                                        <td>
                                            @Model.Type
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Scheduled Date & Time
                                        </td>
                                        <td>
                                            @Model.ScheduledDateTime
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Ticket Quantity
                                        </td>
                                        <td>
                                            @Model.TicketQuantity
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Is Recurring
                                        </td>

                                        @if (@Model.GetEventRecurringValue(Model.IsRecurring) == 1)
                                        {
                                            <td>Yes</td>
                                            ;
                                        }
                                        else
                                        {
                                            <td>No</td>
                                        }

                                    </tr>
                                    <tr>
                                        <td>
                                            Location
                                        </td>
                                        <td>
                                            @Model.Location
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Link
                                        </td>
                                        <td>
                                            @Model.Link
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            Description
                                        </td>
                                        <td>
                                            @Model.Description
                                        </td>
                                    </tr>

                                </table>

                                @Html.ActionLink("Buy Ticket", "PayForEvent", new { eventID = Model.ID }, new { @class = "btn btn-block btn-primary form-group login-button" })
                                <br />
                            }





                        }

                    </div>

                </div>
            </div>
        </div>
    </section>